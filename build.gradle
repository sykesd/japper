plugins {
    id 'java-library'
}

group 'org.dt'
version '1.0.3'

repositories {
    mavenCentral()
}

dependencies {
    implementation('commons-beanutils:commons-beanutils:1.9.4') {
        /*
         * commons-beanutils has a transitive dependency on commons-collections 3.x, which has
         * a vulnerability which is only fixed in 4.x. BUT, 4.x is deployed under a new name
         * which means that you can't just force a newer version. However, we don't actually
         * make use of the collections features in Japper, so we can safely exclude this
         * dependency for ourselves.
         */
        exclude group: 'commons-collections', module: 'commons-collections'
    }
    implementation 'commons-logging:commons-logging:1.2'
    implementation 'org.javassist:javassist:3.29.2-GA'

    testImplementation 'org.hsqldb:hsqldb:2.7.4'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.apache.logging.log4j:log4j-core:2.18.0'
    testRuntimeOnly 'org.apache.logging.log4j:log4j-jcl:2.18.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }

    withSourcesJar()
    withJavadocJar()
}

test {
    useJUnitPlatform()
}

/**
 * Everything from here down generates a version.properties file containing
 * version information that ends up in the JAR at the correct location for
 * the {@code Japper.getVersion()} to return the actual version.
 */
def versionTask = tasks.register("generateVersionProps", WriteProperties) { t ->
    def generatedResourcesDir = project.layout.buildDirectory.dir(["generated", "sources", "japper", "main", "resources"].join(File.separator))
    def outputFile = generatedResourcesDir.map {it -> it.file("version.properties") }

    t.outputFile(outputFile)
    t.property("version", project.version.toString())
    t.property("buildDate", new Date().format("yyyyMMddHHmmss"))
}

processResources {
    into('org/dt/japper') {
        from versionTask
    }
}